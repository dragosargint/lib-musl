From a5d6347b910d79b4eb2680b6b637dcf7ba5436e5 Mon Sep 17 00:00:00 2001
From: Dragos Iulian Argint <dragosargint21@gmail.com>
Date: Thu, 14 Jul 2022 22:46:08 +0300
Subject: [PATCH] This is the clone wrapper that musl uses.

Two crucial changes are in this patch. The first is
the use of function calls instead of system calls. The
second is placing the function pointer of the thread onto
the child's stack.

Signed-off-by: Dragos Iulian Argint <dragosargint21@gmail.com>
---
 src/thread/x86_64/clone.s | 50 +++++++++++++++++++++------------------
 1 file changed, 27 insertions(+), 23 deletions(-)

diff --git a/src/thread/x86_64/clone.s b/src/thread/x86_64/clone.s
index ee59903..014726c 100644
--- a/src/thread/x86_64/clone.s
+++ b/src/thread/x86_64/clone.s
@@ -1,27 +1,31 @@
 .text
 .global __clone
 .type   __clone,@function
+/* call conv:   rdi         rsi         rdx         rcx       r8       r9      8(%rsp) */
+/* clone wrap:  func        stack       flags       arg       ptid     tls     ctid    */
+/* sys_clone:   flags       stack       ptid        ctid      tls                      */
+
 __clone:
-	xor %eax,%eax
-	mov $56,%al
-	mov %rdi,%r11
-	mov %rdx,%rdi
-	mov %r8,%rdx
-	mov %r9,%r8
-	mov 8(%rsp),%r10
-	mov %r11,%r9
-	and $-16,%rsi
-	sub $8,%rsi
-	mov %rcx,(%rsi)
-	syscall
-	test %eax,%eax
-	jnz 1f
-	xor %ebp,%ebp
-	pop %rdi
-	call *%r9
-	mov %eax,%edi
-	xor %eax,%eax
-	mov $60,%al
-	syscall
-	hlt
-1:	ret
+    mov %rdi,%r11
+    mov %rdx,%rdi       /* rdi=flags */
+    mov %r8,%rdx        /* rdx=&ptid */
+    mov %r9,%r8         /* r8=tls    */
+    mov 8(%rsp),%r10
+    mov %r11,%r9
+    and $-16,%rsi       /* rsi=stack */
+    sub $16,%rsi
+    mov %rcx,8(%rsi)    /* push the argument onto the child’s stack */
+    mov %r9,0(%rsi)     /* push the function pointer                */
+    mov %r10,%rcx       /* rcx=&ctid                                */
+    call uk_syscall_r_clone
+    test %eax,%eax
+    jnz 1f          /* the parent jumps, the child doesn’t   */
+    xor %ebp,%ebp
+    pop %r9         /* extract the function in child context */
+    pop %rdi        /* extract the argument                  */
+    call *%r9       /* call function                         */
+    mov %eax,%edi
+    xor %eax,%eax
+    call uk_syscall_r_exit
+    hlt
+1:  ret
-- 
2.17.1

