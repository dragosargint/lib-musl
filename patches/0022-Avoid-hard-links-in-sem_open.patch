From e57e84cd9937dbc074486595107296af40087b34 Mon Sep 17 00:00:00 2001
From: ARGINT DRAGOS IULIAN <dragosargint21@gmail.com>
Date: Tue, 20 Jul 2021 16:11:18 +0300
Subject: [PATCH] Avoid-hard-links-in-sem_open

Signed-off-by: ARGINT DRAGOS IULIAN <dragosargint21@gmail.com>
---
 src/thread/sem_open.c | 21 +++++++++++----------
 1 file changed, 11 insertions(+), 10 deletions(-)

diff --git a/src/thread/sem_open.c b/src/thread/sem_open.c
index dc0279e..db16851 100644
--- a/src/thread/sem_open.c
+++ b/src/thread/sem_open.c
@@ -111,7 +111,7 @@ sem_t *sem_open(const char *name, int flags, ...)
 		 * and attempt to atomically link it as the new name */
 		clock_gettime(CLOCK_REALTIME, &ts);
 		snprintf(tmp, sizeof(tmp), "/dev/shm/tmp-%d", (int)ts.tv_nsec);
-		fd = open(tmp, O_CREAT|O_EXCL|FLAGS, mode);
+		fd = open(name, O_CREAT|O_EXCL|FLAGS, mode);
 		if (fd < 0) {
 			if (errno == EEXIST) continue;
 			goto fail;
@@ -123,15 +123,16 @@ sem_t *sem_open(const char *name, int flags, ...)
 			goto fail;
 		}
 		close(fd);
-		e = link(tmp, name) ? errno : 0;
-		unlink(tmp);
-		if (!e) break;
-		munmap(map, sizeof(sem_t));
-		/* Failure is only fatal when doing an exclusive open;
-		 * otherwise, next iteration will try to open the
-		 * existing file. */
-		if (e != EEXIST || flags == (O_CREAT|O_EXCL))
-			goto fail;
+		break;
+		// e = link(tmp, name) ? errno : 0;
+		// unlink(tmp);
+		// if (!e) break;
+		// munmap(map, sizeof(sem_t));
+		//  Failure is only fatal when doing an exclusive open;
+		//  * otherwise, next iteration will try to open the
+		//  * existing file. 
+		// if (e != EEXIST || flags == (O_CREAT|O_EXCL))
+		// 	goto fail;
 	}
 
 	/* See if the newly mapped semaphore is already mapped. If
-- 
2.17.1

